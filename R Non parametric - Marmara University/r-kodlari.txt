######### 3. ders ######

setwd("C:/Users/nihattak/Desktop/Verilen Dersler-Marmara/nonparametric")
kiraz1<-read.table("kiraz1.txt",head=TRUE,sep = "\t")
kiraz1$grup<-as.factor(kiraz1$grup)
kiraz2<-read.table("kiraz2.txt",head=TRUE,sep = "\t")
kiraz2$grup<-as.factor(kiraz2$grup)

###   $ işareti 
kiraz1$grup

###   attach fonksiyonu

attach(kiraz1)

detach(kiraz1)
### unique fonksiyonu veri setinde tekrar eden değerler gösterilmez

unique(kiraz1$magr)

### table fonksiyonu, tekrar eden değerleri frekansları ile beraber verir
table(kiraz1$magr)
table(kiraz1$grup)


### sıralama fonksiyonu 
### sort(x,decreasing=FALSE)

grup<-sort(kiraz1$grup, decreasing = T) 

### tapply fonskiyonu

ort<-tapply(kiraz1$magr, kiraz1$grup, mean)
std<-tapply(kiraz1$magr, kiraz1$grup, sd)
hacim<-tapply(kiraz1$magr, kiraz1$grup, length)
cbind(ort,std,hacim)



##### döngüler

(a=array(rnorm(5)))
b<-numeric(5)
for (i in 1:5) {
  b[i]=a[i]+1
} 

#Fibonacci
length <- 5
fibout <- numeric(length)
fibout[1] <- 0
fibout[2] <- 1
for (i in 3:length) { 
  fibout[i] <- fibout[i-1]+fibout[i-2]
}     


i=1
c<-numeric(5)
while (i<=5) {
  c[i]=a[i]+1
  i=i+1
}
#### if/else yapısı
# if {   } ----     else -----


####### Ders 2 düzeltme
setwd("C:/Users/nihattak/Desktop/Verilen Dersler-Marmara/nonparametric")
kiraz1<-read.table("kiraz1.txt",head=TRUE,sep = "\t")
kiraz1$grup<-as.factor(kiraz1$grup)
kiraz2<-read.table("kiraz2.txt",head=TRUE,sep = "\t")
kiraz2$grup<-as.factor(kiraz2$grup)
str(kiraz1)
head(kiraz1)
tail(kiraz1)
levels(kiraz2$grup)

if(!require(FSA)){install.packages("FSA");require(FSA)}
Summarize(magr~grup,data=kiraz1)
Summarize(magr~grup,data=kiraz1)
#########################################

####Levene testi

if(!require(car)){install.packages("car");require(car)}
leveneTest(magr~grup,data=kiraz1)
leveneTest(magr~grup,data=kiraz2)

#### Brown-Forsyth Testi

if(!require(HH)){install.packages("HH");}
hovBF(magr~grup,data=kiraz1)
hovBF(magr~grup,data=kiraz2)

### Bağımsızlık testi
model1<-lm(magr~grup,data=kiraz1)
durbinWatsonTest(model1)
model2<-lm(magr~grup,data=kiraz2)
durbinWatsonTest(model2)

### Sıra Atama

x<-c(14,10,11,14,16,19,18,17,15,17,20,14,13,16,19)
x
rank_x<- rank(x,ties.method = "average")
rank_x
sorted_x<-sort(x)
rank(sorted_x,ties.method = "average")

rank(sorted_x,ties.method = "first")
rank(sorted_x,ties.method = "last")
rank(sorted_x,ties.method = "min")
rank(sorted_x,ties.method = "max")

rank(sorted_x,ties.method = "random")
rank(sorted_x,ties.method = "random")

#### Veriye 2 tane kayıp gözlem ekleniyor
x<-c(14,10,11,NA,14,16,19,18,17,15,17,20,14,13,NA,16,19)
x

rank(x,ties.method = "min")
rank(x,ties.method = "min",na.last = FALSE)
rank(x,ties.method = "min",na.last = "keep")
rank(x,ties.method = "min",na.last = NA)

##################################
### TEK ORNEK İŞARET TESTİ
######SignTest(x, y = NULL, alternative = c("two.sided", "less", "greater"),mu = 0, conf.level = 0.95, ... )
if(!require(BSDA)){install.packages("BSDA")}; require(BSDA)
if(!require(DescTools)){install.packages("DescTools")}; require(DescTools)

x<-c(3,4,5,3,4,6,6,3,6,8,7,7,8,8)
SignTest(x,mu=7,alternative = "two.sided",conf.level = 0.95)

x<-c(5,3,4,2,4,2,2,4,1,2)
SignTest(x,mu=3,alternative = "two.sided",conf.level = 0.95)

x<-c(4.14,1.07,0.36,0.02,2.5,4.48,3.77,3.58,1.6,4.22,1.6,0.84,6.37,3.01,1.99,1.8,2.59,2.43,1.93,5.31,3.28,4.83,2.82,0.72,2.61,2.42,1.54,0.9,2.55,6.52,2.26,0.56,1.51,1.3,4.23,2.70,5.14,4.49,8.81)
SignTest(x,mu=1.8,alternative = "greater",conf.level = 0.95)
SIGN.test(x,md=1.8,alternative = "greater",conf.level = 0.95)

#### Wilcoxon Sıra Sayıları Testi

